@model List<taskWebtel.Model.taskModel>

@{
    ViewData["Title"] = "Task List";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
            color: #343a40;
            margin: 0;
            padding: 20px;
        }

        h1 {
            color: #007bff;
        }

        #taskList {
            list-style-type: none;
            padding: 0;
        }

            #taskList li {
                background-color: #ffffff;
                border: 1px solid #ddd;
                margin-bottom: 10px;
                padding: 10px;
                border-radius: 4px;
            }

        #taskForm {
            margin-top: 20px;
        }

            #taskForm div {
                margin-bottom: 10px;
            }

            #taskForm label {
                display: block;
                margin-bottom: 5px;
                font-weight: bold;
            }

            #taskForm input, #taskForm textarea {
                width: 100%;
                padding: 8px;
                border: 1px solid #ccc;
                border-radius: 4px;
                box-sizing: border-box;
            }

            #taskForm button {
                background-color: #007bff;
                color: #ffffff;
                padding: 10px 15px;
                border: none;
                border-radius: 4px;
                cursor: pointer;
            }

                #taskForm button:hover {
                    background-color: #0056b3;
                }
    </style>
</head>
<body>
    <h1>@ViewData["Title"]</h1>

    <ul id="taskList">
        @foreach (var task in Model)
        {
            <li>
                <strong>@task.Name:</strong> @task.Description
            </li>
        }
    </ul>

    <form id="taskForm">
        <div>
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required />
        </div>
        <div>
            <label for="description">Description:</label>
            <textarea id="description" name="description" required></textarea>
        </div>
        <button type="submit">Add Task</button>
    </form>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Function to fetch tasks from the API and update the task list
            function fetchTasks() {
                fetch('/api/Task/getTask')
                    .then(response => response.json())
                    .then(data => {
                        const taskList = document.getElementById('taskList');
                        taskList.innerHTML = ''; // Clear existing tasks
                        data.forEach(task => {
                            const listItem = document.createElement('li');
                            listItem.innerHTML = `<strong>${task.name}:</strong> ${task.description}`;
                            taskList.appendChild(listItem);
                        });
                    })
                    .catch(error => console.error('Error fetching tasks:', error));
            }

            // Fetch tasks on page load
            fetchTasks();

            // Handle form submission to add a new task
            document.getElementById('taskForm').addEventListener('submit', function (event) {
                event.preventDefault();
                const name = document.getElementById('name').value;
                const description = document.getElementById('description').value;

                fetch('/api/Task/postTask', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ name: name, description: description })
                })
                    .then(response => response.json())
                    .then(data => {
                        fetchTasks(); // Refresh the task list after adding a new task
                        document.getElementById('taskForm').reset(); // Reset the form
                    })
                    .catch(error => console.error('Error adding task:', error));
            });
        });
    </script>
</body>
</html>
